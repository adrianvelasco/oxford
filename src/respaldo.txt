import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { withStyles } from '@material-ui/core/styles';
import classNames from 'classnames';
import {
  Drawer, CssBaseline, AppBar,Toolbar, List,
  Typography, Divider,IconButton, ListItem, 
  ListItemIcon, ListItemText
} from '@material-ui/core';

import MenuIcon from '@material-ui/icons/Menu';
import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';
import ChevronRightIcon from '@material-ui/icons/ChevronRight';
import DraftsIcon from '@material-ui/icons/Drafts';
import AccountBalance from '@material-ui/icons/AccountBalance';

//Rutas
import { Link, Switch, Route } from 'react-router-dom'
import Home from '../../Components/Home';
import Student from '../../Components/Student';
//Styles
import { styles } from './style'

class Navegation extends Component {
  constructor(props){
    super(props);
    this.state = {
      open: false,
    };

    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);
    this.handleDrawerClose= this.handleDrawerClose.bind(this);
  }

  handleDrawerOpen(){
    this.setState({ open: true });
  };

  handleDrawerClose(){
    this.setState({ open: false });
  };


  render() {
    const { classes, theme } = this.props;
    const { open } = this.state;

    const home = props => <Link to="/Home" {...props} />
    const student = props => <Link to="/Student" {...props} />

    return (
      <div className={classes.root}>
        <CssBaseline />
        <AppBar
          position="fixed"
          className={classNames(classes.appBar,
           {[classes.appBarShift]: open,})}>
          <Toolbar variant="dense" disableGutters={!open}>
            <IconButton color="inherit" aria-label="Open drawer" onClick={this.handleDrawerOpen}
              className={classNames(classes.menuButton, open && classes.hide)}
            >
              <MenuIcon />
            </IconButton>
            <Typography variant="h6" color="inherit" noWrap>
               <IconButton color="inherit">
                  <AccountBalance/>
              </IconButton>
              OxfordHouse
            </Typography>
          </Toolbar>
        </AppBar>
        <Drawer className={classes.drawer} variant="persistent" anchor="left" open={open} classes={{ paper: classes.drawerPaper,}}>
          <div className={classes.drawerHeader}>
            <IconButton onClick={this.handleDrawerClose}>
              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}
            </IconButton> 
          </div>
          <Divider />
            <List component="nav">
             <IconButton color="inherit" aria-label="Open drawer" onClick={this.handleDrawerOpen}>
              <MenuIcon />
            </IconButton>
            <ListItem button component={home}>
              <ListItemIcon>
                <DraftsIcon />
              </ListItemIcon>
              <ListItemText primary="Home" />
            </ListItem>
            <ListItem button component={student}>
              <ListItemIcon>
                <DraftsIcon />
              </ListItemIcon>
              <ListItemText primary="Student" />
            </ListItem>
          </List>
        </Drawer>
        <main className={classNames(classes.content, {[classes.contentShift]: open,})}  >
          <div className={classes.drawerHeader} />
          <Switch>
            <Route  path="/Home" component={Home} />
            <Route  path="/Student" component={Student} />
          </Switch>
        </main>
      </div>
    );
  }
}

Navegation.propTypes = {
  classes: PropTypes.object.isRequired,
  theme: PropTypes.object.isRequired,
};

export default withStyles(styles, { withTheme: true })(Navegation);
const drawerWidth = 240;

export const styles = theme => ({
  root: {
    flexGrow: 1,
  },
  
  appBarShift: {
    width: `calc(100% - ${drawerWidth}px)`,
    marginLeft: drawerWidth,
    transition: theme.transitions.create(['margin', 'width'], {
      easing: theme.transitions.easing.easeOut,
      duration: theme.transitions.duration.enteringScreen,
    }),
  },
  menuButton: {
    marginLeft: 12,
    marginRight: 20,
  },
  hide: {
    display: 'none',
  },
  drawer: {
    width: drawerWidth,
    flexShrink: 0,
  },
  drawerPaper: {
    width: drawerWidth,
  },
  drawerHeader: {
    display: 'flex',
    alignItems: 'center',
    padding: '0 8px',
    ...theme.mixins.toolbar,
    justifyContent: 'flex-end',
  },
  content: {
    flexGrow: 1,
    padding: theme.spacing.unit * 3,
    transition: theme.transitions.create('margin', {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen,
    }),
    marginLeft: -drawerWidth,
  },
  contentShift: {
    transition: theme.transitions.create('margin', {
      easing: theme.transitions.easing.easeOut,
      duration: theme.transitions.duration.enteringScreen,
    }),
    marginLeft: 0,
  },
  avatar: {
    margin: theme.spacing.unit,
    backgroundColor: '#FF5733',
  },
});


//
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { withStyles } from '@material-ui/core/styles';
import classNames from 'classnames';
import {
  Drawer, CssBaseline, AppBar,Toolbar, List,
  Typography, Divider,IconButton, ListItem, 
  ListItemIcon, ListItemText
} from '@material-ui/core';

import MenuIcon from '@material-ui/icons/Menu';
import ListIcon from '@material-ui/icons/List';
import AccountCircle from '@material-ui/icons/AccountCircle';
import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';
import ChevronRightIcon from '@material-ui/icons/ChevronRight';
import DraftsIcon from '@material-ui/icons/Drafts';
import AccountBalance from '@material-ui/icons/AccountBalance';

//Rutas
import { Link, Switch, Route } from 'react-router-dom'
import Home from '../../Components/Home';
import Student from '../../Components/Student';
import ListUser from '../../Components/ListUser';
//Styles
import { styles } from './style'

class Navegation extends Component {
  constructor(props){
    super(props);
    this.state = {
      open: false,
    };

    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);
    this.handleDrawerClose= this.handleDrawerClose.bind(this);
  }

  handleDrawerOpen(){
    this.setState({ open: true });
  };

  handleDrawerClose(){
    this.setState({ open: false });
  };
  handleMenu = event => {
    this.setState({ anchorEl: event.currentTarget });
  };

  handleClose = () => {
    this.setState({ anchorEl: null });
  };



  render() {
    const { classes, theme } = this.props;
    const { open } = this.state;
    const student = props => <Link to="/Student" {...props} />
    const home = props => <Link to="/Home" {...props} />
    const Listuser = props => <Link to="/ListUser" {...props} />

    return (
      <div className={classes.root}>
        <CssBaseline />
        <AppBar position="fixed" className={classNames(classes.appBar, {[classes.appBarShift]: open,})}>
          <Toolbar variant="dense" disableGutters={!open}>
            <IconButton color="inherit" aria-label="Open drawer" onClick={this.handleDrawerOpen}
              className={classNames(classes.menuButton, open && classes.hide)}
            >
              <MenuIcon />
            </IconButton>
            <Typography variant="h6" color="inherit" noWrap>
               <IconButton color="inherit">
                  <AccountBalance/>
              </IconButton>
              OxfordHouse
            </Typography>
          </Toolbar>
        </AppBar>
        <Drawer className={classes.drawer} variant="persistent" anchor="left" open={open} classes={{ paper: classes.drawerPaper,}}>
          <div className={classes.drawerHeader}>
            <IconButton onClick={this.handleDrawerClose}>
              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}
            </IconButton> 
          </div>
          <Divider />
            <List component="nav">
            <ListItem button component={home}>
              <ListItemIcon>
                <DraftsIcon />
              </ListItemIcon>
              <ListItemText primary="Home" />
            </ListItem>
            <ListItem button component={student}>
              <ListItemIcon>
                <AccountCircle />
              </ListItemIcon>
              <ListItemText primary="Register Student"/>
            </ListItem>
            <ListItem button component={Listuser}>
              <ListItemIcon>
                <ListIcon />
              </ListItemIcon>
              <ListItemText primary="List User" />
            </ListItem>
          </List>
        </Drawer>
        <main className={classNames(classes.content, {[classes.contentShift]: open,})}  >
          <div className={classes.drawerHeader} />
          <Switch>
            <Route  path="/Home" component={Home} />
            <Route  path="/Student" component={Student} />
            <Route  path="/ListUser" component={ListUser} />
          </Switch>
        </main>
      </div>
    );
  }
}

Navegation.propTypes = {
  classes: PropTypes.object.isRequired,
  theme: PropTypes.object.isRequired,
};

export default withStyles(styles, { withTheme: true })(Navegation);


import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { withStyles } from '@material-ui/core/styles';
import { Table, TableBody, TableCell, TableHead, Paper, TableRow} from '@material-ui/core';

import { styles } from './style';

class ListUser extends Component{
  constructor(props){
      super(props);
      this.state = {
        users: []
      }
  }
  static propTypes = {
    users: PropTypes.array.isRequired
  }

  componentDidMount = async () => {
    const url = 'http://192.168.1.117:3000/users';

    const settings = {
      method: 'GET'
    };

    const request = new Request(url, settings);

    await fetch(request)
    .then(response => response.json())
    .then(data => this.setState({users: data}))
    .catch(error => console.log(error))

  }

  render(){
    const users = this.state.users;
    // console.log(users);
    const { classes } = this.props;

    return (
      <div className="row">
          <Paper className={classes.root}>
         <Table className={classes.table}>
              <TableHead>
                <TableRow>
                  <TableCell align="right">Nombre</TableCell>
                  <TableCell align="right">Usuario</TableCell>
                  <TableCell align="right">Rol</TableCell>
                  <TableCell align="right">Cumpleaños</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
              {users && users.map((user, i) =>
                 <TableRow key={i}>
                   <TableCell align="right">{user.firstName + ' ' + user.lastName }</TableCell>
                   <TableCell align="right">{ user.username}</TableCell>
                   <TableCell align="right">{ user.role}</TableCell>
                   <TableCell align="right">{user.birthdate}</TableCell>
                   <TableCell></TableCell>
                 </TableRow>
               )}
              </TableBody>
            </Table>
          </Paper>
      </div>
    )
  }
}
ListUser.propTypes = {
  classes: PropTypes.object.isRequired,
};

export default  withStyles(styles)(ListUser);








//style Navegation Drawer
import React from 'react';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import AccountCircle from '@material-ui/icons/AccountCircle';
import DraftsIcon from '@material-ui/icons/Drafts';
import Divider from '@material-ui/core/Divider';
import { Link } from 'react-router-dom'
import ListIcon from '@material-ui/icons/List';

const drawerWidth = 250;

const student = props => <Link to="/Student" {...props} />
const home = props => <Link to="/Home" {...props} />
const Listuser = props => <Link to="/ListUser" {...props} />

export const drawer = (
  <div>
    <div/>
    <Divider />
     <List component="nav">
        <ListItem button component={home}>
          <ListItemIcon>
            <DraftsIcon />
          </ListItemIcon>
          <ListItemText primary="Home" />
        </ListItem>
        <ListItem button component={student}>
          <ListItemIcon>
            <AccountCircle />
          </ListItemIcon>
          <ListItemText primary="Register Student"/>
        </ListItem>
        <ListItem button component={Listuser}>
          <ListItemIcon>
            <ListIcon />
          </ListItemIcon>
          <ListItemText primary="List User" />
        </ListItem>
      </List>
  </div>
);

export const  styles = theme => ({
  root: {
    display: 'flex',
  },
  drawer: {
    [theme.breakpoints.up('sm')]: {
      width: drawerWidth,
      flexShrink: 0,
    },
  },
  appBar: {
    marginLeft: drawerWidth,
    [theme.breakpoints.up('sm')]: {
      width: `calc(100% - ${drawerWidth}px)`,
    },
  },
  menuButton: {
    marginRight: 20,
    [theme.breakpoints.up('sm')]: {
      display: 'none',
    },
  },
  toolbar: theme.mixins.toolbar,
  drawerPaper: {
    width: drawerWidth,
  },
  content: {
    flexGrow: 1,
    overflow: 'auto',
    padding: theme.spacing.unit * 3,
  },
});

//Content 

import React, {Component} from 'react';
import PropTypes from 'prop-types';
import AppBar from '@material-ui/core/AppBar';
import CssBaseline from '@material-ui/core/CssBaseline';
import Drawer from '@material-ui/core/Drawer';
import Hidden from '@material-ui/core/Hidden';
import IconButton from '@material-ui/core/IconButton';
import MenuIcon from '@material-ui/icons/Menu';
import Toolbar from '@material-ui/core/Toolbar';
import Typography from '@material-ui/core/Typography';
import { withStyles } from '@material-ui/core/styles';
import { styles, drawer } from './style';
import { Switch, Route } from 'react-router-dom'
import Home from '../../Components/Home';
import Student from '../../Components/Student';
import ListUser from '../../Components/ListUser';

class ResponsiveDrawer extends Component {
  constructor(props){
    super(props);
    this.state = {
      mobile: false,
    };

    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);
  }
  
  handleDrawerToggle(){
    this.setState(state => ({ mobileOpen: !state.mobileOpen }));
  };

  render() {
    const { classes, theme } = this.props;
    
    return (
      <div className={classes.root}>
        <CssBaseline />
        <AppBar position="fixed" className={classes.appBar}>
          <Toolbar>
            <IconButton
              color="inherit"
              aria-label="Open drawer"
              onClick={this.handleDrawerToggle}
              className={classes.menuButton}
            >
              <MenuIcon />
            </IconButton>
            <Typography variant="h6" color="inherit" noWrap>
              OxfordHouse
            </Typography>
          </Toolbar>
        </AppBar>
        <nav className={classes.drawer}>
          <Hidden smUp implementation="css">
            <Drawer
              container={this.props.container}
              variant="temporary"
              anchor={theme.direction === 'rtl' ? 'right' : 'left'}
              open={this.state.mobileOpen}
              onClose={this.handleDrawerToggle}
              classes={{
                paper: classes.drawerPaper,
              }}
            >
              {drawer}
            </Drawer>
          </Hidden>
          <Hidden xsDown implementation="css">
            <Drawer classes={{ paper: classes.drawerPaper,}} variant="permanent" open>
              {drawer}
            </Drawer>
          </Hidden>
        </nav>
        <main className={classes.content}>
          <div className={classes.toolbar} />
            <Switch>
              <Route  path="/Home" component={Home} />
              <Route  path="/Student" component={Student} />
              <Route  path="/ListUser" component={ListUser} />
            </Switch>
        </main>
      </div>
    );
  }
}

ResponsiveDrawer.propTypes = {
  classes: PropTypes.object.isRequired,
  container: PropTypes.object,
  theme: PropTypes.object.isRequired,
};

export default withStyles(styles, { withTheme: true })(ResponsiveDrawer);


import React from 'react';
import ReactDOM from 'react-dom';
import Login from './Components/Login'
import {BrowserRouter} from 'react-router-dom';
import * as serviceWorker from './serviceWorker.js';
ReactDOM.render(
  <BrowserRouter>
   <Login />
  </BrowserRouter>,
document.getElementById("root"));
serviceWorker.unregister();
